services:
  demo-app:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./demoAppProject:/demoAppProject
    env_file:
      - .env
    environment:
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}

      - DB_HOST=database
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}

    command: >
       sh -c "python manage.py runserver 0.0.0.0:8000"

    depends_on:
      - database

  database:
    image: postgres:16.2-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    expose:
      - 5432

  redis:
    image: redis:7.2.4-alpine3.19
    hostname: redis

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A demoApp worker --loglevel=info
    volumes:
      - ./demoAppProject:/demoAppProject
    links:
      - redis
      - database
    depends_on:
      - redis
      - database
    env_file:
      - .env
    environment:
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}

      - DB_HOST=database
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}


  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A demoApp flower
    volumes:
      - ./demoAppProject:/demoAppProject
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"